# 1Password連携用GitHub Actions設定例
# 注意: このファイルは参考例です。実際の使用時は適切なsecretsを設定してください。

name: 1Password Integration Example

on:
  workflow_dispatch: # 手動実行用
  # push:
  #   branches: [ main, dev ]
  # pull_request:
  #   branches: [ main ]

jobs:
  # ローカル開発者向けのガイダンス
  setup-guide:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 1Password CLI Setup Guide
        run: |
          echo "🔐 1Password CLI Setup Guide"
          echo "================================"
          echo ""
          echo "ローカル開発での1Password CLI使用方法:"
          echo "1. brew install 1password-cli"
          echo "2. 1Passwordアプリで CLI統合を有効化"
          echo "3. op signin --account my.1password.com"
          echo "4. npm run dev:secure"
          echo ""
          echo "利用可能なスクリプト:"
          echo "- npm run dev:secure     # 秘密情報付きで開発開始"
          echo "- npm run build:secure   # 秘密情報付きでビルド"
          echo "- npm run test:secure    # 秘密情報付きでテスト"
          echo "- npm run secrets:validate # 1Password接続確認"
          echo ""
          echo "詳細: docs/1PASSWORD_CLI_SETUP.md を参照"

  # 本番環境向けの環境変数チェック例
  validate-secrets:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Required Secrets
        run: |
          echo "🔍 Required Secrets Validation"
          echo "=============================="
          
          # 必要な環境変数のリスト（実際のプロジェクトに合わせて調整）
          REQUIRED_VARS=(
            "NEXTAUTH_SECRET"
            "DATABASE_URL"
            "SENDGRID_API_KEY"
            "STRIPE_SECRET_KEY"
          )
          
          echo "以下の環境変数がGitHub Secretsで設定されている必要があります:"
          for var in "${REQUIRED_VARS[@]}"; do
            echo "- $var"
          done
          
          echo ""
          echo "設定方法:"
          echo "1. GitHub Repository → Settings → Secrets and variables → Actions"
          echo "2. New repository secret をクリック"
          echo "3. 各変数を1Passwordから取得して設定"
          
          echo ""
          echo "ローカル開発では 'npm run dev:secure' で1Password CLIから自動取得"

  # TypeScript型チェック（秘密情報なしで実行可能）
  type-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check

# 本番環境用の設定例（コメントアウト）
# production-deploy:
#   runs-on: ubuntu-latest
#   if: github.ref == 'refs/heads/main'
#   
#   steps:
#     - name: Checkout
#       uses: actions/checkout@v4
#     
#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18'
#         cache: 'npm'
#     
#     - name: Install dependencies
#       run: npm ci
#     
#     - name: Build with secrets
#       env:
#         NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
#         DATABASE_URL: ${{ secrets.DATABASE_URL }}
#         SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
#         STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
#         # その他必要な環境変数
#       run: npm run build
#     
#     - name: Deploy to Vercel
#       uses: amondnet/vercel-action@v25
#       with:
#         vercel-token: ${{ secrets.VERCEL_TOKEN }}
#         vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
#         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
#         vercel-args: '--prod'